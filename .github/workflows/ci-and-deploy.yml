# .github/workflows/ci-and-deploy.yml
name: CI & Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Démarrage des services MySQL et Memcached pour les tests
    services:
      db:
        image: mysql:8.0
        env:
          # fallback à 'root' si le secret n'est pas défini
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD || 'root' }}
          MYSQL_DATABASE: appdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

      memcached:
        image: memcached:latest
        ports:
          - 11211:11211

    env:
      DB_HOST: 127.0.0.1
      DB_USER: root
      DB_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD || 'root' }}
      DB_NAME: appdb
      MEMCACHED_HOST: 127.0.0.1
      MEMCACHED_PORT: 11211

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, pdo_mysql, mysqli, zip, memcached

      - name: Prepare .env for tests
        run: |
          cat > .env <<EOF
          DB_HOST=127.0.0.1
          DB_USER=root
          DB_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD || 'root' }}
          DB_NAME=appdb
          MEMCACHED_HOST=127.0.0.1
          MEMCACHED_PORT=11211
          EOF

      - name: Install PHP dependencies
        run: composer install --no-interaction --optimize-autoloader

      - name: Wait for MySQL to be healthy
        run: |
          until mysqladmin ping -h 127.0.0.1 --silent; do
            echo "Waiting for MySQL…"
            sleep 3
          done

      - name: Debug DB startup (on failure)
        if: failure()
        run: docker logs ${{ job.services.db.id }} --tail 50

      - name: Run PHPUnit under phpdbg
        run: phpdbg -qrr vendor/bin/phpunit --coverage-text

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      ACR_LOGIN_SERVER: ${{ secrets.AZURE_ACR }}.azurecr.io
      IMAGE_NAME: crud_app

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP for build
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, pdo_mysql, mysqli, zip, memcached

      - name: Install PHP dependencies
        run: composer install --no-interaction --optimize-autoloader

      - name: Build and tag Docker image
        run: docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:latest .

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_ACR }}.azurecr.io
          username: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}
          password: ${{ secrets.AZURE_SERVICE_PRINCIPAL_PASSWORD }}

      - name: Push Docker image to ACR
        run: docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:latest

  deploy-to-azure:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          images: ${{ secrets.AZURE_ACR }}.azurecr.io/crud_app:latest
