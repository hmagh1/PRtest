# .github/workflows/ci-and-deploy.yml
name: CI & Deploy to Azure

on:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Démarrage des services MySQL et Memcached pour les tests
    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: appdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

      memcached:
        image: memcached:latest
        ports:
          - 11211:11211

    env:
      # Pour Dotenv et vos tests
      DB_HOST: 127.0.0.1
      DB_USER: root
      DB_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      DB_NAME: appdb
      MEMCACHED_HOST: 127.0.0.1
      MEMCACHED_PORT: 11211

    steps:
      - uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, pdo_mysql, mysqli, zip, memcached

      - name: Prepare .env for tests
        run: |
          cp .env.example .env
          echo "DB_HOST=${DB_HOST}"     >> .env
          echo "DB_USER=${DB_USER}"     >> .env
          echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
          echo "DB_NAME=${DB_NAME}"     >> .env
          echo "MEMCACHED_HOST=${MEMCACHED_HOST}" >> .env
          echo "MEMCACHED_PORT=${MEMCACHED_PORT}" >> .env

      - name: Install dependencies
        run: composer install --no-interaction --optimize-autoloader

      - name: Wait for DB to be healthy
        run: |
          until mysqladmin ping -h 127.0.0.1 --silent; do
            echo "Waiting for database…"
            sleep 3
          done

      - name: Run PHPUnit under phpdbg
        run: phpdbg -qrr vendor/bin/phpunit --coverage-text

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      ACR_NAME: ${{ secrets.AZURE_ACR }}
      ACR_LOGIN_SERVER: ${{ secrets.AZURE_ACR }}.azurecr.io
